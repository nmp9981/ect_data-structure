#include <iostream>
#include <cstring>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <chrono>
#include <stack>
#include <queue>
#include <deque>
#include <utility>

using namespace std;//이름공간 선언
using namespace chrono;
int n,k;
vector<int> tree[1001];//트리
int node[1001];//진입차수
int build[1001];//각 건물 건설시간
int times[1001];//총 소요시간

//위상정렬
void bfs(){
    //진입차수가 0인것을 모두 큐에 담음
    queue<int> q;
    for(int i=1;i<=n;i++){
        if(node[i]==0){
            q.push(i);
            times[i] = build[i];//시작점들의 총 소요시간
        }
    }
    
    while(!q.empty()){
        //현재좌표
        int x = q.front();
        q.pop();
        
        //이웃노드 탐색
        for(int i=0;i<tree[x].size();i++){
            int next = tree[x][i];//다음지점
            node[next]-=1;//간선 제거
            //각 노드의 총 소요시간 갱신
            times[next] = max(times[next],build[next]+times[x]);
            if(node[next]==0){//새로운 루트 노드 생성
                q.push(next);
            }
        }
    }
    //건설할 번호 입력
    int num;
    cin>>num;
    cout<<times[num]<<"\n";//결과 출력
}

//초기화
void init(){
    for(int i=1;i<=n;i++){
        node[i] = 0;
        build[i] = 0;
        times[i] = 0;
        tree[i].clear();
    }
}

//입력
void input(){
    //건물건설 완료시간
    for(int i=1;i<=n;i++){
        cin>>build[i];
    }
    //그래프 입력
    for(int i=0;i<k;i++){
        int a,b;
        cin>>a>>b;
        tree[a].push_back(b);//단방향 그래프(a->b)
        node[b]+=1;//진입차수 증가
    }
}

int main(){
    cin.tie(0);
    cout.tie(0);
    
    int t;
    cin>>t;
    for(int i=0;i<t;i++){
        cin>>n>>k;
        input();//입력
        bfs();//위상정렬
        init();//초기화
    }
    return 0;
}
