#include <iostream>
#include <cstring>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <chrono>
#include <stack>
#include <queue>
#include <deque>
#include <utility>

using namespace std;//이름공간 선언
using namespace chrono;
int n,m;
int parent[500001];//각 노드의 루트
int inorder[1001];//중위순회
int idx[1001];//각 중위순회의 위치

//초기화
void init(){
    for(int i=1;i<=n;i++){
        parent[i] = i;
    }
}

//루트노드 찾기
int find(int x){
    if(parent[x]==x){
        return x;
    }
    parent[x] = find(parent[x]);
    return parent[x];
}

//합치기
void merge(int x,int y){
    x = find(x);
    y = find(y);
    if(x==y){//루트가 같으면 이미 같은 집합
        return;
    }else{
        parent[x] = y;//합치기
    }
}

int main(){
    cin.tie(0);
    cout.tie(0);
    
    //입력
    cin>>n>>m;
    init();//초기화
    for(int i=1;i<=m;i++){
        int a,b;
        cin>>a>>b;
        if(find(a)==find(b)){//사이클 생성
            cout<<i;
            return 0;
        }
        merge(a,b);
    }
    //사이클이 안나온다면
    cout<<0;
    return 0;
}
