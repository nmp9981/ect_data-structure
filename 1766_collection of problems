#include <iostream>
#include <cstring>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <vector>
#include <chrono>
#include <stack>
#include <queue>
#include <deque>
#include <utility>

using namespace std;//이름공간 선언
using namespace chrono;
int n,m;
vector<int> tree[32001];//트리
int get_node[32001];//진입차수

//입력
void input(){
    for(int i=1;i<=m;i++){//그래프 입력
        int a,b;
        cin>>a>>b;
        tree[a].push_back(b);//a->b
        get_node[b] += 1;//진입차수 증가
    }
}

//위상정렬
void bfs(){
    //진입차수 0인것을 모두 큐에 넣기
    priority_queue<int, vector<int>,greater<int>> pq;//쉬운것부터(최소힙)
    for(int i=1;i<=n;i++){
        if(get_node[i]==0){
            pq.push(i);//루트노드
        }
    }
    
    while(!pq.empty()){
        int x = pq.top();//현재 노드
        pq.pop();
        cout<<x<<" ";//출력
        
        //다음 노드 탐색
        for(int i=0;i<tree[x].size();i++){
            int next = tree[x][i];//다음 지점
            get_node[next]-=1;//진입차수 -1
            if(get_node[next]==0){//진입차수가 0이면
                pq.push(next);//큐에 넣기
            }
        }
    }
}

int main(){
    cin.tie(0);
    cout.tie(0);
    
    cin>>n>>m;//입력을 먼저 받고 초기화
    input();//입력
    bfs();//위상정렬
    return 0;
}
